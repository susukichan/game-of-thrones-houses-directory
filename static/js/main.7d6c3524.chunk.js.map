{"version":3,"sources":["api.ts","components/DataBlock/DataBlock.tsx","components/Loading/Loading.tsx","components/Modal/Modal.tsx","types.ts","NineHouses.tsx","components/ListItem/ListItem.tsx","ListOfHouses.tsx","Homepage.tsx","App.tsx","components/FontAwesomeIcon/FontAwesomeIcon.ts","reportWebVitals.ts","index.tsx"],"names":["fetchJSON","url","fetch","then","rsp","json","fetchJSONOrDefault","def","Promise","resolve","fetchHouse","houseId","fetchHouseMetaData","house","a","getDetail","x","all","map","member","swornMembers","cadetBranches","currentLord","name","overlord","heir","founder","DataBlock","houseWithMetadata","maybeWeapons","ancestralWeapons","join","className","region","coatOfArms","words","seats","founded","diedOut","length","Loading","Modal","isOpen","onClose","houseName","loading","onClick","mkInitialHouseMetadata","NineHouses","Object","entries","greyjoy","tully","baratheon","lannister","stark","targaryen","arryn","martell","tyrell","k","v","HouseCard","useState","modalIsOpen","setModalIsOpen","setLoading","setHouseWithMetaData","src","alt","ListItem","setHouseWithMetadata","useEffect","replace","customTheme","theme","colors","primary25","primary","optionRegions","value","label","optionProperties","optionPageSize","ListOfHouses","houses","setHouses","setRegion","hasWords","setHasWords","hasTitles","setHasTitles","hasSeats","setHasSeats","hasDiedOut","setHasDiedOut","hasAncestralWeapons","setHasAncestralWeapons","pageSize","setPageSize","hasOptionProperties","setOptionProperties","linkHeader","setLinkHeader","parsed","setParsed","set","Set","has","require","parse","maybePrevUrl","prev","maybeNextUrl","next","fetchUrl","headers","get","id","action","onSubmit","e","preventDefault","params","URLSearchParams","fromEntries","filter","Boolean","options","onChange","placeholder","isSearchable","components","makeAnimated","Array","isArray","isMulti","noOptionsMessage","autoFocus","type","icon","Homepage","App","backgroundImage","setBackgoundImage","style","to","htmlFor","path","library","add","faCheckSquare","faSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d6c3524.chunk.js","sourcesContent":["import { House, HouseWithMetadata } from \"./types\";\n\n/**\n * INFO I typecast the api reponse based on their documentation and through parsing\n */\n\nconst fetchJSON = (url: string) => fetch(url).then((rsp) => rsp.json());\nconst fetchJSONOrDefault = <A>(url: string, def: A) =>\n  url === \"\" ? Promise.resolve(def) : fetchJSON(url);\n\nexport const fetchHouse = (houseId: number): Promise<House> =>\n  fetchJSON(`https://anapioficeandfire.com/api/houses/${houseId}`);\n\nexport const fetchHouseMetaData = async (\n  house: House\n): Promise<HouseWithMetadata> => {\n  const getDetail = (x: any) =>\n    Promise.all(x.map((member: any) => fetchJSON(member)));\n\n  const [swornMembers, cadetBranches, currentLord, overlord, heir, founder] =\n    await Promise.all([\n      getDetail(house.swornMembers),\n      getDetail(house.cadetBranches),\n      fetchJSONOrDefault(house.currentLord, { name: \"\" }),\n      fetchJSONOrDefault(house.overlord, { name: \"\" }),\n      fetchJSONOrDefault(house.heir, { name: \"\" }),\n      fetchJSONOrDefault(house.founder, { name: \"\" }),\n    ]);\n\n  return {\n    house: house,\n    swornMembers,\n    cadetBranches,\n    currentLord,\n    overlord,\n    heir,\n    founder,\n  };\n};\n","import { HasHouseWithMetadata } from \"../../types\";\nimport \"./data-block-style.css\";\n\ninterface DataBlockProps extends HasHouseWithMetadata {}\n\nexport const DataBlock = ({\n  houseWithMetadata: {\n    house,\n    currentLord,\n    overlord,\n    heir,\n    swornMembers,\n    cadetBranches,\n    founder,\n  },\n}: DataBlockProps): JSX.Element => {\n  const maybeWeapons = house?.ancestralWeapons.join(\",\");\n\n  return (\n    <div className=\"data-block\">\n      <h2 className=\"data-block__title\">{house?.name}</h2>\n      <div className=\"data-block__content-list\">\n        <div className=\"data-block__content-row\">\n          <div className=\"data-block__content-row-title\">\n            <h4>🗺 Region:</h4>\n          </div>\n          <div>{house?.region}</div>\n        </div>\n        {house?.coatOfArms && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>🛡 Coat of Arms:</h4>\n            </div>\n            <div>{house?.coatOfArms}</div>\n          </div>\n        )}\n        {house?.words && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>🎤 Words:</h4>\n            </div>\n            <div>{house?.words}</div>\n          </div>\n        )}\n        {house?.seats[0] && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>🪑 Seats:</h4>\n            </div>\n            <div>{house?.seats}</div>\n          </div>\n        )}\n        {currentLord.name && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>🧙 Current Lord:</h4>\n            </div>\n            <div>{currentLord.name}</div>\n          </div>\n        )}\n        {heir.name && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>👨‍👩‍👦 Heir:</h4>\n            </div>\n            <div>{heir.name}</div>\n          </div>\n        )}\n        {overlord.name && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>🧝 Overlord:</h4>\n            </div>\n            <div>{overlord.name}</div>\n          </div>\n        )}\n        {house?.founded && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>📅 Founded:</h4>\n            </div>\n            <div>{house?.founded}</div>\n          </div>\n        )}\n        {founder.name && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>👨‍🦳 Founder:</h4>\n            </div>\n            <div>{founder.name}</div>\n          </div>\n        )}\n        {house?.diedOut && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              {\" \"}\n              <h4>🧟 Died out:</h4>\n            </div>\n            <div>{house?.diedOut}</div>\n          </div>\n        )}\n        {maybeWeapons && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>🪓 Ancestral weapons:</h4>\n            </div>\n            <div>{maybeWeapons}</div>\n          </div>\n        )}\n\n        {cadetBranches.length > 1 && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>🏰 Cadet branches:</h4>\n            </div>\n            <div>{cadetBranches.map((member) => ` ${member.name}．`)}</div>\n          </div>\n        )}\n        {swornMembers.length > 1 && (\n          <div className=\"data-block__content-row\">\n            <div className=\"data-block__content-row-title\">\n              <h4>⚔️ Sworn members:</h4>\n            </div>\n            <div>{swornMembers.map((member) => ` ${member.name} ．`)}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import \"./loading-style.css\";\n\nexport const Loading = (): JSX.Element => (\n  <div className=\"loading-screen\">\n    <div className=\"lds-ripple\">\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n","import { DataBlock } from \"../DataBlock/DataBlock\";\nimport { HasHouseWithMetadata } from \"../../types\";\nimport { Loading } from \"../Loading/Loading\";\n\nimport \"./modal-style.css\";\n\ninterface ModalProps extends HasHouseWithMetadata {\n  isOpen: boolean;\n  onClose: () => void;\n  houseName: string;\n  loading: boolean;\n}\n\nexport const Modal = ({\n  isOpen,\n  onClose,\n  houseName,\n  houseWithMetadata,\n  loading,\n}: ModalProps): JSX.Element => {\n  if (!isOpen) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"modal__overlay\" onClick={onClose}></div>\n      <div className={`modal modal--${houseName}`}>\n        {loading ? (\n          <Loading />\n        ) : (\n          <>\n            <div className=\"modal-content\">\n              <DataBlock houseWithMetadata={houseWithMetadata} />\n            </div>\n            <button className=\"modal__button\" onClick={onClose}>\n              close\n            </button>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","export interface House {\n  /** The hypermedia URL of this resource */\n  url: string;\n  /** The name of this house */\n  name: string;\n  /** The region that this house resides in */\n  region: string;\n  /** Text describing the coat of arms of this house */\n  coatOfArms: string;\n  /** The words of this house*/\n  words: string;\n  /** The titles that this house holds*/\n  titles: Array<string>;\n  /** The seats that this house holds*/\n  seats: Array<string>;\n  /** The Character resource URL of this house's current lord*/\n  currentLord: string;\n  /** The Character resource URL of this house's heir*/\n  heir: string;\n  /** The House resource URL that this house answers to*/\n  overlord: string;\n  /** The year that this house was founded*/\n  founded: string;\n  /** The Character resource URL that founded this house*/\n  founder: string;\n  /** The year that this house died out*/\n  diedOut: string;\n  /** An array of names of the noteworthy weapons that this house owns */\n  ancestralWeapons: Array<string>;\n  /** An array of House resource URLs that was founded from this house */\n  cadetBranches: Array<string>;\n  /**  An array of Character resource URLs that are sworn to this house*/\n  swornMembers: Array<string>;\n}\n\ninterface HasName {\n  name: string;\n}\n\nexport interface HouseWithMetadata {\n  house: null | House;\n  swornMembers: Array<any>;\n  cadetBranches: Array<any>;\n  currentLord: HasName;\n  overlord: HasName;\n  heir: HasName;\n  founder: HasName;\n}\n\nexport interface HasHouseWithMetadata {\n  houseWithMetadata: HouseWithMetadata;\n}\n\nexport const mkInitialHouseMetadata = (): HouseWithMetadata => ({\n  house: null,\n  swornMembers: [],\n  cadetBranches: [],\n  currentLord: { name: \"Unknown\" },\n  overlord: { name: \"Unknown\" },\n  heir: { name: \"Unknown\" },\n  founder: { name: \"Unknown\" },\n});\n","import { useState } from \"react\";\nimport { fetchHouse, fetchHouseMetaData } from \"./api\";\nimport { Modal } from \"./components/Modal/Modal\";\nimport \"./nine-houses-style.css\";\nimport { HouseWithMetadata, mkInitialHouseMetadata } from \"./types\";\n\nexport const NineHouses = () => {\n  const houseIdFromHouseName = {\n    greyjoy: 169,\n    tully: 395,\n    baratheon: 17,\n    lannister: 229,\n    stark: 362,\n    targaryen: 378,\n    arryn: 7,\n    martell: 285,\n    tyrell: 398,\n  };\n\n  return (\n    <>\n      <section className=\"nine-houses container\">\n        <h1 className=\"nine-houses__title\">Great Houses of Westeros</h1>\n      </section>\n      <section className=\"nine-houses__content container\">\n        <div className=\"content-wrap\">\n          {Object.entries(houseIdFromHouseName).map(([k, v]) => (\n            <HouseCard key={k} houseId={v} houseName={k} />\n          ))}\n        </div>\n      </section>\n    </>\n  );\n};\n\ninterface HouseProps {\n  houseId: number;\n  houseName: string;\n}\n\nconst HouseCard = ({ houseId, houseName }: HouseProps): JSX.Element => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [houseWithMetadata, setHouseWithMetaData] = useState<HouseWithMetadata>(\n    mkInitialHouseMetadata\n  );\n\n  return (\n    <>\n      <div\n        className=\"card\"\n        onClick={async () => {\n          setModalIsOpen(true);\n          setLoading(true);\n          const house = await fetchHouse(houseId);\n          setHouseWithMetaData(await fetchHouseMetaData(house));\n          setLoading(false);\n        }}\n      >\n        <img src={`${houseName}.jpg`} alt={houseName} className=\"card-image\" />\n      </div>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onClose={() => setModalIsOpen(false)}\n        houseWithMetadata={houseWithMetadata}\n        loading={loading}\n        houseName={houseName}\n      />\n    </>\n  );\n};\n","import \"./list-item-style.css\";\nimport { DataBlock } from \"../DataBlock/DataBlock\";\nimport { House, HouseWithMetadata, mkInitialHouseMetadata } from \"../../types\";\nimport { useEffect, useState } from \"react\";\nimport { fetchHouseMetaData } from \"../../api\";\n\ninterface ListItemProps {\n  house: House;\n}\n\nexport const ListItem = ({ house }: ListItemProps): JSX.Element => {\n  const [houseWithMetadata, setHouseWithMetadata] = useState<HouseWithMetadata>(\n    mkInitialHouseMetadata\n  );\n\n  useEffect(() => {\n    fetchHouseMetaData(house).then(setHouseWithMetadata);\n  }, [house]);\n\n  return (\n    <div\n      className={`list-item list-item__region--${\n        house.region.replace(/ /g, \"\") || null\n      }`}\n    >\n      <DataBlock houseWithMetadata={houseWithMetadata} />\n    </div>\n  );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { useEffect, useState } from \"react\";\nimport { Loading } from \"./components/Loading/Loading\";\nimport { ListItem } from \"./components/ListItem/ListItem\";\nimport { House } from \"./types\";\nimport \"./list-of-houses-style.css\";\n\nconst customTheme = (theme: any) => {\n  return {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primary25: \"orange\",\n      primary: \"green\",\n    },\n  };\n};\n\nconst optionRegions = [\n  { value: \"\", label: \"🗺 In all regions\" },\n  { value: \"The Crownlands\", label: \"👑 The Crownlands\" },\n  { value: \"The North\", label: \"🐺 The North\" },\n  { value: \"The Vale\", label: \"🦅 The Vale\" },\n  { value: \"The Riverlands\", label: \"🐟 The Riverlands\" },\n  { value: \"Iron Islands\", label: \"🐙 Iron Islands\" },\n  { value: \"The Westerlands\", label: \"🐻 The Westerlands\" },\n  { value: \"The Reach\", label: \"🌼 The Reach\" },\n  { value: \"The Stormlands\", label: \"🦌 The Stormlands\" },\n  { value: \"Dorne\", label: \"🔆 Dorne\" },\n  { value: \"The Neck\", label: \"👔 The Neck\" },\n];\n\nconst optionProperties = [\n  {\n    value: \"hasWords\",\n    label: \"🎤Has words\",\n  },\n  { value: \"hasTitles\", label: \"🔖Has title\" },\n  {\n    value: \"hasSeats\",\n    label: \"🪑Has seats\",\n  },\n  {\n    value: \"hasDiedOut\",\n    label: \"😵Has died out\",\n  },\n  {\n    value: \"hasAncestralWeapons\",\n    label: \"🪓Has Ancestral Weapons\",\n  },\n];\n\nconst optionPageSize = [\n  {\n    value: 10,\n    label: \"10\",\n  },\n  { value: 20, label: \"20\" },\n  {\n    value: 30,\n    label: \"30\",\n  },\n  {\n    value: 40,\n    label: \"40\",\n  },\n  {\n    value: 50,\n    label: \"50\",\n  },\n];\n\nexport const ListOfHouses = (): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [houses, setHouses] = useState<Array<House>>([]);\n  const [region, setRegion] = useState<{ value?: string }>({});\n  const [hasWords, setHasWords] = useState(false);\n  const [hasTitles, setHasTitles] = useState(false);\n  const [hasSeats, setHasSeats] = useState(false);\n  const [hasDiedOut, setHasDiedOut] = useState(false);\n  const [hasAncestralWeapons, setHasAncestralWeapons] = useState(false);\n  const [pageSize, setPageSize] = useState(10);\n  const [hasOptionProperties, setOptionProperties] = useState<\n    Array<{ value: string }>\n  >([]);\n  const [linkHeader, setLinkHeader] = useState(\"\");\n\n  interface Parsed {\n    prev?: { url: string };\n    next: { url: string };\n  }\n  const [parsed, setParsed] = useState<null | Parsed>(null);\n\n  useEffect(() => {\n    const set = new Set(hasOptionProperties.map((x) => x.value));\n    setHasWords(set.has(\"hasWords\"));\n    setHasTitles(set.has(\"hasTitles\"));\n    setHasSeats(set.has(\"hasSeats\"));\n    setHasDiedOut(set.has(\"hasDiedOut\"));\n    setHasAncestralWeapons(set.has(\"hasAncestralWeapons\"));\n  }, [hasOptionProperties]);\n\n  useEffect(() => {\n    var parse = require(\"parse-link-header\");\n    var parsed = parse(linkHeader);\n    setParsed(parsed);\n  }, [linkHeader]);\n\n  useEffect(() => {}, [parsed]);\n\n  const maybePrevUrl = parsed?.prev?.url;\n  const maybeNextUrl = parsed?.next?.url;\n\n  const fetchUrl = async (url: string) => {\n    const rsp = await fetch(url);\n    setHouses(await rsp.json());\n    setLoading(false);\n    setLinkHeader(rsp.headers.get(\"Link\") ?? \"\");\n  };\n\n  return (\n    <div className=\"list-of-houses container\">\n      <div className=\"select-bar\">\n        <form\n          id=\"search-form\"\n          action=\"\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            setLoading(true);\n\n            const params = new URLSearchParams(\n              Object.fromEntries(\n                [\n                  [\"region\", region?.value ?? \"\"],\n                  [\"hasWords\", hasWords],\n                  [\"hasTitles\", hasTitles],\n                  [\"hasSeats\", hasSeats],\n                  [\"hasDiedOut\", hasDiedOut],\n                  [\"hasAncestralWeapons\", hasAncestralWeapons],\n                  [\"pageSize\", pageSize],\n                ].filter(([, v]) => Boolean(v))\n              )\n            );\n\n            fetch(`https://anapioficeandfire.com/api/houses?${params}`)\n              .then((x) => {\n                setLinkHeader(x.headers.get(\"Link\") ?? \"\");\n                return x.json();\n              })\n              .then((rsp) => {\n                setHouses(rsp);\n                setLoading(false);\n              });\n          }}\n        >\n          <Select\n            theme={customTheme}\n            options={optionRegions}\n            onChange={(e) => setRegion({ value: e?.value })}\n            placeholder=\"Select a region\"\n            isSearchable\n            className=\"select-region\"\n          />\n          <Select\n            components={makeAnimated()}\n            theme={customTheme}\n            options={optionProperties}\n            onChange={(e) => {\n              if (e !== null) {\n                setOptionProperties(Array.isArray(e) ? e : [e]);\n              }\n            }}\n            placeholder=\"Select properties\"\n            isMulti\n            noOptionsMessage={() => \"no other properties 😅\"}\n            autoFocus\n            isSearchable\n            className=\"select-properties\"\n          />\n\n          <Select\n            theme={customTheme}\n            options={optionPageSize}\n            onChange={(e) => {\n              if (e !== null) {\n                setPageSize(e.value);\n              }\n            }}\n            placeholder=\"Result per page\"\n            isSearchable\n            className=\"select-page-size\"\n          />\n          <button type=\"submit\" id=\"search-btn\" className=\"btn\">\n            Search <FontAwesomeIcon icon=\"search\" />\n          </button>\n        </form>\n      </div>\n      <div className=\"search-result\">\n        <div className=\"list-items \">\n          {loading ? (\n            <Loading />\n          ) : (\n            houses.map((house) => <ListItem key={house.url} house={house} />)\n          )}\n        </div>\n      </div>\n      <div className=\"next-prev-buttons\">\n        {maybePrevUrl && (\n          <button\n            className=\"prev-button\"\n            onClick={() => fetchUrl(maybePrevUrl)}\n          >\n            Previous page\n          </button>\n        )}\n        {maybeNextUrl && (\n          <button\n            className=\"next-button\"\n            onClick={() => fetchUrl(maybeNextUrl)}\n          >\n            Next page\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import \"./homepage-style.css\";\n\nexport const Homepage = (): JSX.Element => {\n  return (\n    <section className=\"homepage container\">\n      <h1 className=\"homepage__title container--narrow\">\n        The Winds of Winter <br />\n        <span>Game of Thrones</span>\n      </h1>\n    </section>\n  );\n};\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { NineHouses } from \"./NineHouses\";\nimport { ListOfHouses } from \"./ListOfHouses\";\nimport { Homepage } from \"./Homepage\";\nimport \"./components/FontAwesomeIcon/FontAwesomeIcon\";\n\nexport function App() {\n  const [backgroundImage, setBackgoundImage] = useState(\"url(homepage.jpg)\");\n\n  return (\n    <Router>\n      <div className=\"App\" style={{ backgroundImage: backgroundImage }}>\n        <header>\n          <h1 className=\"logo\">⚔️</h1>\n          <input type=\"checkbox\" id=\"nav-toggle\" className=\"nav-toggle\" />\n          <nav>\n            <ul>\n              <li>\n                <Link\n                  to=\"/\"\n                  onClick={() => setBackgoundImage(\"url(homepage.jpg)\")}\n                >\n                  Home\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"nine-houses\"\n                  onClick={() => setBackgoundImage(\"url(nine-houses.jpg)\")}\n                >\n                  Nine Houses\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"list-of-houses\"\n                  onClick={() => setBackgoundImage(\"url(list-of-houses.jpg)\")}\n                >\n                  List of Houses\n                </Link>\n              </li>\n            </ul>\n          </nav>\n          <label htmlFor=\"nav-toggle\" className=\"nav-toggle-label\">\n            <span></span>\n          </label>\n        </header>\n        <main className=\"main\" style={{ backgroundImage: backgroundImage }}>\n          <Switch>\n            <Route path=\"/nine-houses\">\n              <NineHouses />\n            </Route>\n            <Route path=\"/list-of-houses\">\n              <ListOfHouses />\n            </Route>\n            <Route>\n              <Homepage />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCheckSquare, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faCheckSquare, faSearch);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}